{
  "v": "5.12.1",
  "fr": 60,
  "ip": 0,
  "op": 656,
  "w": 1170,
  "h": 2532,
  "nm": "Ember_MatchAnimation",
  "ddd": 0,
  "assets": [
    { "id": "image_0", "w": 1000, "h": 1000, "u": "images/", "p": "img_0.png", "e": 0 },
    { "id": "image_1", "w": 1000, "h": 1000, "u": "images/", "p": "img_1.png", "e": 0 },
    { "id": "image_2", "w": 992, "h": 1482, "u": "images/", "p": "img_2.jpg", "e": 0 },
    { "id": "image_3", "w": 1200, "h": 1600, "u": "images/", "p": "img_3.jpg", "e": 0 },
    {
      "id": "comp_0",
      "nm": "MATCH_CoreAnimation",
      "fr": 60,
      "layers": [
        {
          "ddd": 0,
          "ind": 1,
          "ty": 2,
          "nm": "MatchRight.png",
          "cl": "png",
          "parent": 4,
          "td": 1,
          "refId": "image_0",
          "sr": 1,
          "ks": {
            "o": { "a": 0, "k": 100, "ix": 11 },
            "r": { "a": 0, "k": 0, "ix": 10 },
            "p": { "a": 0, "k": [2495.768, 2298.88, 0], "ix": 2, "l": 2 },
            "a": { "a": 0, "k": [500, 500, 0], "ix": 1, "l": 2 },
            "s": { "a": 0, "k": [244.322, 244.322, 100], "ix": 6, "l": 2 }
          },
          "ao": 0,
          "ip": 0,
          "op": 656,
          "st": 0,
          "bm": 0
        },
        {
          "ddd": 0,
          "ind": 2,
          "ty": 2,
          "nm": "MatchLeft.png",
          "cl": "png",
          "parent": 3,
          "td": 1,
          "refId": "image_1",
          "sr": 1,
          "ks": {
            "o": { "a": 0, "k": 100, "ix": 11 },
            "r": { "a": 0, "k": 0, "ix": 10 },
            "p": { "a": 0, "k": [2028.706, 2104.113, 0], "ix": 2, "l": 2 },
            "a": { "a": 0, "k": [500, 500, 0], "ix": 1, "l": 2 },
            "s": { "a": 0, "k": [214.326, 214.326, 100], "ix": 6, "l": 2 }
          },
          "ao": 0,
          "ip": 0,
          "op": 656,
          "st": 0,
          "bm": 0
        },
        {
          "ddd": 0,
          "ind": 3,
          "ty": 0,
          "nm": "HUGO",
          "tt": 1,
          "tp": 2,
          "refId": "comp_1",
          "sr": 1,
          "ks": {
            "o": { "a": 0, "k": 100, "ix": 11 },
            "r": {
              "a": 0,
              "k": 0,
              "ix": 10,
              "x": "var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var tTrI = null;\n    var tTrO = null;\n    if (bL.marker?.numKeys > 0) {\n        var acmp = 'zzzzzzzzzzzzzzz_AC';\n        for (var i = 1; i <= bL.marker?.numKeys; i++) {\n            var m = bL.marker?.key(i);\n            var p = m.parameters;\n            if (p.hasOwnProperty(acmp + 'MarkerEnabled') && p.hasOwnProperty(acmp + 'MarkerType') && p.hasOwnProperty(acmp + 'MarkerAppPresetType')) {\n                if (p[acmp + 'MarkerEnabled'] != '1') {\n                    continue;\n                }\n                switch (p[acmp + 'MarkerAppPresetType']) {\n                case '1': {\n                        tTrI = m.time;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    ;\n    function acAngleValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acPD(fxN) {\n        try {\n            if (bL.effect(fxN).active === false) {\n                ac.en = false;\n            }\n        } catch (e) {\n        }\n    }\n    function acValAdd(val) {\n        acAccA = $bm_sum(acAccA, val);\n    }\n    function easeInCubic(t) {\n        return $bm_mul($bm_mul(t, t), t);\n    }\n    function upACo(tIn, dIn, tOut, dOut, eFi, eFo) {\n        if (dIn < 0) {\n            dIn = 0;\n        }\n        if (dOut < 0) {\n            dOut = 0;\n        }\n        ac.fade = 1;\n        if (t < tOut) {\n            if (t < $bm_sum(tIn, dIn)) {\n                if (dIn == 0) {\n                    ac.fade = 0;\n                } else {\n                    ac.fade = $bm_div($bm_sub(t, tIn), dIn);\n                    if (ac.fade < 0) {\n                        ac.fade = 0;\n                    }\n                    if (ac.fade > 1) {\n                        ac.fade = 1;\n                    }\n                    if (eFi) {\n                        ac.fade = eFi(ac.fade);\n                    }\n                }\n            }\n        } else {\n            if (dOut == 0) {\n                ac.fade = 0;\n            } else {\n                ac.fade = $bm_div($bm_sub(t, tOut), dOut);\n                if (ac.fade < 0) {\n                    ac.fade = 0;\n                }\n                if (ac.fade > 1) {\n                    ac.fade = 1;\n                }\n                if (eFo) {\n                    ac.fade = eFo(ac.fade);\n                }\n                ac.fade = $bm_sub(1, ac.fade);\n            }\n        }\n        ac.intensity = 1;\n        ac.en = true;\n        ac.t = $bm_sub(t, tIn);\n    }\n    var ac = {};\n    ac.en = false;\n    var v = thisProperty.value;\n    var t = time;\n    var acAccA = 0;\n    ac.en = false;\n    if (tTrI !== null && t < tTrI) {\n        upACo(bL.inPoint, $bm_sub(tTrI, bL.inPoint), bL.outPoint, 0);\n        ac.fade = $bm_sub(1, ac.fade);\n    }\n    acPD('AC IN [I2Z] Controls');\n    if (ac.en) {\n        acValAdd($bm_mul(acAngleValP('AC IN [I2Z] Controls', 'Angle', -90), easeInCubic(ac.fade)));\n    }\n    v = thisProperty.value;\n    v = $bm_sum(v, acAccA);\n    return v;\n}\n$bm_rt = result;"
            },
            "p": {
              "a": 0,
              "k": [569.273, 1397.056, 0],
              "ix": 2,
              "l": 2,
              "x": "var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var tTrI = null;\n    var tTrO = null;\n    if (bL.marker?.numKeys > 0) {\n        var acmp = 'zzzzzzzzzzzzzzz_AC';\n        for (var i = 1; i <= bL.marker?.numKeys; i++) {\n            var m = bL.marker?.key(i);\n            var p = m.parameters;\n            if (p.hasOwnProperty(acmp + 'MarkerEnabled') && p.hasOwnProperty(acmp + 'MarkerType') && p.hasOwnProperty(acmp + 'MarkerAppPresetType')) {\n                if (p[acmp + 'MarkerEnabled'] != '1') {\n                    continue;\n                }\n                switch (p[acmp + 'MarkerAppPresetType']) {\n                case '1': {\n                        tTrI = m.time;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    ;\n    function acPD(fxN) {\n        try {\n            if (bL.effect(fxN).active === false) {\n                ac.en = false;\n            }\n        } catch (e) {\n        }\n    }\n    function acPointValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acValAdd(val) {\n        acAccA = $bm_sum(acAccA, val);\n    }\n    function easeInCubic(t) {\n        return $bm_mul($bm_mul(t, t), t);\n    }\n    function upACo(tIn, dIn, tOut, dOut, eFi, eFo) {\n        if (dIn < 0) {\n            dIn = 0;\n        }\n        if (dOut < 0) {\n            dOut = 0;\n        }\n        ac.fade = 1;\n        if (t < tOut) {\n            if (t < $bm_sum(tIn, dIn)) {\n                if (dIn == 0) {\n                    ac.fade = 0;\n                } else {\n                    ac.fade = $bm_div($bm_sub(t, tIn), dIn);\n                    if (ac.fade < 0) {\n                        ac.fade = 0;\n                    }\n                    if (ac.fade > 1) {\n                        ac.fade = 1;\n                    }\n                    if (eFi) {\n                        ac.fade = eFi(ac.fade);\n                    }\n                }\n            }\n        } else {\n            if (dOut == 0) {\n                ac.fade = 0;\n            } else {\n                ac.fade = $bm_div($bm_sub(t, tOut), dOut);\n                if (ac.fade < 0) {\n                    ac.fade = 0;\n                }\n                if (ac.fade > 1) {\n                    ac.fade = 1;\n                }\n                if (eFo) {\n                    ac.fade = eFo(ac.fade);\n                }\n                ac.fade = $bm_sub(1, ac.fade);\n            }\n        }\n        ac.intensity = 1;\n        ac.en = true;\n        ac.t = $bm_sub(t, tIn);\n    }\n    var ac = {};\n    ac.en = false;\n    var v = thisProperty.value;\n    var t = time;\n    var acAccA = 0;\n    ac.en = false;\n    if (tTrI !== null && t < tTrI) {\n        upACo(bL.inPoint, $bm_sub(tTrI, bL.inPoint), bL.outPoint, 0);\n        ac.fade = $bm_sub(1, ac.fade);\n    }\n    acPD('AC IN [I2Z] Controls');\n    if (ac.en) {\n        acValAdd($bm_mul(acPointValP('AC IN [I2Z] Controls', 'Position', [\n            -2500,\n            0\n        ]), easeInCubic(ac.fade)));\n    }\n    v = thisProperty.value;\n    v = $bm_sum(v, acAccA);\n    return v;\n}\n$bm_rt = result;"
            },
            "a": { "a": 0, "k": [1995, 2385, 0], "ix": 1, "l": 2 },
            "s": { "a": 0, "k": [46.658, 46.658, 100], "ix": 6, "l": 2 }
          },
          "ao": 0,
          "ef": [
            {
              "ty": 5,
              "nm": "AC IN [I2Z] Controls",
              "np": 4,
              "mn": "Pseudo/MHAC PrCtrl I2Z 4",
              "ix": 1,
              "en": 1,
              "ef": [
                {
                  "ty": 3,
                  "nm": "Position",
                  "mn": "Pseudo/MHAC PrCtrl I2Z 4-0001",
                  "ix": 1,
                  "v": { "a": 0, "k": [-2500, 0], "ix": 1 }
                },
                {
                  "ty": 0,
                  "nm": "Angle",
                  "mn": "Pseudo/MHAC PrCtrl I2Z 4-0002",
                  "ix": 2,
                  "v": { "a": 0, "k": -90, "ix": 2 }
                }
              ]
            }
          ],
          "w": 3990,
          "h": 4770,
          "ip": 0,
          "op": 656,
          "st": 0,
          "bm": 0
        },
        {
          "ddd": 0,
          "ind": 4,
          "ty": 0,
          "nm": "AMELIA",
          "tt": 1,
          "tp": 1,
          "refId": "comp_2",
          "sr": 1,
          "ks": {
            "o": { "a": 0, "k": 100, "ix": 11 },
            "r": {
              "a": 0,
              "k": 0,
              "ix": 10,
              "x": "var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var tTrI = null;\n    var tTrO = null;\n    if (bL.marker?.numKeys > 0) {\n        var acmp = 'zzzzzzzzzzzzzzz_AC';\n        for (var i = 1; i <= bL.marker?.numKeys; i++) {\n            var m = bL.marker?.key(i);\n            var p = m.parameters;\n            if (p.hasOwnProperty(acmp + 'MarkerEnabled') && p.hasOwnProperty(acmp + 'MarkerType') && p.hasOwnProperty(acmp + 'MarkerAppPresetType')) {\n                if (p[acmp + 'MarkerEnabled'] != '1') {\n                    continue;\n                }\n                switch (p[acmp + 'MarkerAppPresetType']) {\n                case '1': {\n                        tTrI = m.time;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    ;\n    function acAngleValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acPD(fxN) {\n        try {\n            if (bL.effect(fxN).active === false) {\n                ac.en = false;\n            }\n        } catch (e) {\n        }\n    }\n    function acValAdd(val) {\n        acAccA = $bm_sum(acAccA, val);\n    }\n    function easeInCubic(t) {\n        return $bm_mul($bm_mul(t, t), t);\n    }\n    function upACo(tIn, dIn, tOut, dOut, eFi, eFo) {\n        if (dIn < 0) {\n            dIn = 0;\n        }\n        if (dOut < 0) {\n            dOut = 0;\n        }\n        ac.fade = 1;\n        if (t < tOut) {\n            if (t < $bm_sum(tIn, dIn)) {\n                if (dIn == 0) {\n                    ac.fade = 0;\n                } else {\n                    ac.fade = $bm_div($bm_sub(t, tIn), dIn);\n                    if (ac.fade < 0) {\n                        ac.fade = 0;\n                    }\n                    if (ac.fade > 1) {\n                        ac.fade = 1;\n                    }\n                    if (eFi) {\n                        ac.fade = eFi(ac.fade);\n                    }\n                }\n            }\n        } else {\n            if (dOut == 0) {\n                ac.fade = 0;\n            } else {\n                ac.fade = $bm_div($bm_sub(t, tOut), dOut);\n                if (ac.fade < 0) {\n                    ac.fade = 0;\n                }\n                if (ac.fade > 1) {\n                    ac.fade = 1;\n                }\n                if (eFo) {\n                    ac.fade = eFo(ac.fade);\n                }\n                ac.fade = $bm_sub(1, ac.fade);\n            }\n        }\n        ac.intensity = 1;\n        ac.en = true;\n        ac.t = $bm_sub(t, tIn);\n    }\n    var ac = {};\n    ac.en = false;\n    var v = thisProperty.value;\n    var t = time;\n    var acAccA = 0;\n    ac.en = false;\n    if (tTrI !== null && t < tTrI) {\n        upACo(bL.inPoint, $bm_sub(tTrI, bL.inPoint), bL.outPoint, 0);\n        ac.fade = $bm_sub(1, ac.fade);\n    }\n    acPD('AC IN [3G8] Controls');\n    if (ac.en) {\n        acValAdd($bm_mul(acAngleValP('AC IN [3G8] Controls', 'Angle', 90), easeInCubic(ac.fade)));\n    }\n    v = thisProperty.value;\n    v = $bm_sum(v, acAccA);\n    return v;\n}\n$bm_rt = result;"
            },
            "p": {
              "a": 0,
              "k": [605.969, 1317.211, 0],
              "ix": 2,
              "l": 2,
              "x": "var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var tTrI = null;\n    var tTrO = null;\n    if (bL.marker?.numKeys > 0) {\n        var acmp = 'zzzzzzzzzzzzzzz_AC';\n        for (var i = 1; i <= bL.marker?.numKeys; i++) {\n            var m = bL.marker?.key(i);\n            var p = m.parameters;\n            if (p.hasOwnProperty(acmp + 'MarkerEnabled') && p.hasOwnProperty(acmp + 'MarkerType') && p.hasOwnProperty(acmp + 'MarkerAppPresetType')) {\n                if (p[acmp + 'MarkerEnabled'] != '1') {\n                    continue;\n                }\n                switch (p[acmp + 'MarkerAppPresetType']) {\n                case '1': {\n                        tTrI = m.time;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    ;\n    function acPD(fxN) {\n        try {\n            if (bL.effect(fxN).active === false) {\n                ac.en = false;\n            }\n        } catch (e) {\n        }\n    }\n    function acPointValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acValAdd(val) {\n        acAccA = $bm_sum(acAccA, val);\n    }\n    function easeInCubic(t) {\n        return $bm_mul($bm_mul(t, t), t);\n    }\n    function upACo(tIn, dIn, tOut, dOut, eFi, eFo) {\n        if (dIn < 0) {\n            dIn = 0;\n        }\n        if (dOut < 0) {\n            dOut = 0;\n        }\n        ac.fade = 1;\n        if (t < tOut) {\n            if (t < $bm_sum(tIn, dIn)) {\n                if (dIn == 0) {\n                    ac.fade = 0;\n                } else {\n                    ac.fade = $bm_div($bm_sub(t, tIn), dIn);\n                    if (ac.fade < 0) {\n                        ac.fade = 0;\n                    }\n                    if (ac.fade > 1) {\n                        ac.fade = 1;\n                    }\n                    if (eFi) {\n                        ac.fade = eFi(ac.fade);\n                    }\n                }\n            }\n        } else {\n            if (dOut == 0) {\n                ac.fade = 0;\n            } else {\n                ac.fade = $bm_div($bm_sub(t, tOut), dOut);\n                if (ac.fade < 0) {\n                    ac.fade = 0;\n                }\n                if (ac.fade > 1) {\n                    ac.fade = 1;\n                }\n                if (eFo) {\n                    ac.fade = eFo(ac.fade);\n                }\n                ac.fade = $bm_sub(1, ac.fade);\n            }\n        }\n        ac.intensity = 1;\n        ac.en = true;\n        ac.t = $bm_sub(t, tIn);\n    }\n    var ac = {};\n    ac.en = false;\n    var v = thisProperty.value;\n    var t = time;\n    var acAccA = 0;\n    ac.en = false;\n    if (tTrI !== null && t < tTrI) {\n        upACo(bL.inPoint, $bm_sub(tTrI, bL.inPoint), bL.outPoint, 0);\n        ac.fade = $bm_sub(1, ac.fade);\n    }\n    acPD('AC IN [3G8] Controls');\n    if (ac.en) {\n        acValAdd($bm_mul(acPointValP('AC IN [3G8] Controls', 'Position', [\n            2500,\n            0\n        ]), easeInCubic(ac.fade)));\n    }\n    v = thisProperty.value;\n    v = $bm_sum(v, acAccA);\n    return v;\n}\n$bm_rt = result;"
            },
            "a": { "a": 0, "k": [2547, 2424, 0], "ix": 1, "l": 2 },
            "s": { "a": 0, "k": [40.93, 40.93, 100], "ix": 6, "l": 2 }
          },
          "ao": 0,
          "ef": [
            {
              "ty": 5,
              "nm": "AC IN [3G8] Controls",
              "np": 4,
              "mn": "Pseudo/MHAC PrCtrl 3G8 4",
              "ix": 1,
              "en": 1,
              "ef": [
                {
                  "ty": 3,
                  "nm": "Position",
                  "mn": "Pseudo/MHAC PrCtrl 3G8 4-0001",
                  "ix": 1,
                  "v": { "a": 0, "k": [2500, 0], "ix": 1 }
                },
                {
                  "ty": 0,
                  "nm": "Angle",
                  "mn": "Pseudo/MHAC PrCtrl 3G8 4-0002",
                  "ix": 2,
                  "v": { "a": 0, "k": 90, "ix": 2 }
                }
              ]
            }
          ],
          "w": 5094,
          "h": 4848,
          "ip": 0,
          "op": 656,
          "st": 0,
          "bm": 0
        }
      ]
    },
    {
      "id": "comp_1",
      "nm": "HUGO",
      "fr": 60,
      "layers": [
        {
          "ddd": 0,
          "ind": 1,
          "ty": 2,
          "nm": "HugoPic.png",
          "cl": "png",
          "refId": "image_2",
          "sr": 1,
          "ks": {
            "o": { "a": 0, "k": 100, "ix": 11 },
            "r": { "a": 0, "k": 0, "ix": 10 },
            "p": { "a": 0, "k": [1704.112, 2443.696, 0], "ix": 2, "l": 2 },
            "a": { "a": 0, "k": [496, 741, 0], "ix": 1, "l": 2 },
            "s": { "a": 0, "k": [173.983, 173.983, 100], "ix": 6, "l": 2 }
          },
          "ao": 0,
          "ef": [
            {
              "ty": 5,
              "nm": "CC RepeTile",
              "np": 8,
              "mn": "CC RepeTile",
              "ix": 1,
              "en": 1,
              "ef": [
                {
                  "ty": 0,
                  "nm": "Expand Right",
                  "mn": "CC RepeTile-0001",
                  "ix": 1,
                  "v": { "a": 0, "k": 1326, "ix": 1 }
                },
                {
                  "ty": 0,
                  "nm": "Expand Left",
                  "mn": "CC RepeTile-0002",
                  "ix": 2,
                  "v": { "a": 0, "k": 1331, "ix": 2 }
                },
                {
                  "ty": 0,
                  "nm": "Expand Down",
                  "mn": "CC RepeTile-0003",
                  "ix": 3,
                  "v": { "a": 0, "k": 1305, "ix": 3 }
                },
                {
                  "ty": 0,
                  "nm": "Expand Up",
                  "mn": "CC RepeTile-0004",
                  "ix": 4,
                  "v": { "a": 0, "k": 1463, "ix": 4 }
                },
                {
                  "ty": 7,
                  "nm": "Tiling",
                  "mn": "CC RepeTile-0005",
                  "ix": 5,
                  "v": { "a": 0, "k": 4, "ix": 5 }
                },
                {
                  "ty": 0,
                  "nm": "Blend Borders",
                  "mn": "CC RepeTile-0006",
                  "ix": 6,
                  "v": { "a": 0, "k": 0, "ix": 6 }
                }
              ]
            }
          ],
          "ip": 0,
          "op": 3195,
          "st": 0,
          "bm": 0
        }
      ]
    },
    {
      "id": "comp_2",
      "nm": "AMELIA",
      "fr": 60,
      "layers": [
        {
          "ddd": 0,
          "ind": 1,
          "ty": 2,
          "nm": "AmeliaPic.jpg",
          "cl": "jpg",
          "refId": "image_3",
          "sr": 1,
          "ks": {
            "o": { "a": 0, "k": 100, "ix": 11 },
            "r": { "a": 0, "k": 0, "ix": 10 },
            "p": { "a": 0, "k": [3128.354, 2172.832, 0], "ix": 2, "l": 2 },
            "a": { "a": 0, "k": [600, 800, 0], "ix": 1, "l": 2 },
            "s": { "a": 0, "k": [195.016, 195.016, 100], "ix": 6, "l": 2 }
          },
          "ao": 0,
          "ef": [
            {
              "ty": 5,
              "nm": "CC RepeTile",
              "np": 8,
              "mn": "CC RepeTile",
              "ix": 1,
              "en": 1,
              "ef": [
                {
                  "ty": 0,
                  "nm": "Expand Right",
                  "mn": "CC RepeTile-0001",
                  "ix": 1,
                  "v": { "a": 0, "k": 846, "ix": 1 }
                },
                {
                  "ty": 0,
                  "nm": "Expand Left",
                  "mn": "CC RepeTile-0002",
                  "ix": 2,
                  "v": { "a": 0, "k": 1361, "ix": 2 }
                },
                {
                  "ty": 0,
                  "nm": "Expand Down",
                  "mn": "CC RepeTile-0003",
                  "ix": 3,
                  "v": { "a": 0, "k": 1192, "ix": 3 }
                },
                {
                  "ty": 0,
                  "nm": "Expand Up",
                  "mn": "CC RepeTile-0004",
                  "ix": 4,
                  "v": { "a": 0, "k": 1463, "ix": 4 }
                },
                {
                  "ty": 7,
                  "nm": "Tiling",
                  "mn": "CC RepeTile-0005",
                  "ix": 5,
                  "v": { "a": 0, "k": 4, "ix": 5 }
                },
                {
                  "ty": 0,
                  "nm": "Blend Borders",
                  "mn": "CC RepeTile-0006",
                  "ix": 6,
                  "v": { "a": 0, "k": 0, "ix": 6 }
                }
              ]
            }
          ],
          "ip": 0,
          "op": 3200,
          "st": 0,
          "bm": 0
        }
      ]
    }
  ],
  "fonts": {
    "list": [
      {
        "fName": "GillSans-Bold",
        "fFamily": "Gill Sans",
        "fStyle": "Bold",
        "ascent": 67.6986694335938
      }
    ]
  },
  "layers": [
    {
      "ddd": 0,
      "ind": 1,
      "ty": 5,
      "nm": "MATCH",
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": {
          "a": 0,
          "k": 0,
          "ix": 10,
          "x": "var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var tTrI = null;\n    var tTrO = null;\n    if (bL.marker?.numKeys > 0) {\n        var acmp = 'zzzzzzzzzzzzzzz_AC';\n        for (var i = 1; i <= bL.marker?.numKeys; i++) {\n            var m = bL.marker?.key(i);\n            var p = m.parameters;\n            if (p.hasOwnProperty(acmp + 'MarkerEnabled') && p.hasOwnProperty(acmp + 'MarkerType') && p.hasOwnProperty(acmp + 'MarkerAppPresetType')) {\n                if (p[acmp + 'MarkerEnabled'] != '1') {\n                    continue;\n                }\n                switch (p[acmp + 'MarkerAppPresetType']) {\n                case '1': {\n                        tTrI = m.time;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    ;\n    function acAngleValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acPD(fxN) {\n        try {\n            if (bL.effect(fxN).active === false) {\n                ac.en = false;\n            }\n        } catch (e) {\n        }\n    }\n    function acValAdd(val) {\n        acAccA = $bm_sum(acAccA, val);\n    }\n    function easeInCubic(t) {\n        return $bm_mul($bm_mul(t, t), t);\n    }\n    function upACo(tIn, dIn, tOut, dOut, eFi, eFo) {\n        if (dIn < 0) {\n            dIn = 0;\n        }\n        if (dOut < 0) {\n            dOut = 0;\n        }\n        ac.fade = 1;\n        if (t < tOut) {\n            if (t < $bm_sum(tIn, dIn)) {\n                if (dIn == 0) {\n                    ac.fade = 0;\n                } else {\n                    ac.fade = $bm_div($bm_sub(t, tIn), dIn);\n                    if (ac.fade < 0) {\n                        ac.fade = 0;\n                    }\n                    if (ac.fade > 1) {\n                        ac.fade = 1;\n                    }\n                    if (eFi) {\n                        ac.fade = eFi(ac.fade);\n                    }\n                }\n            }\n        } else {\n            if (dOut == 0) {\n                ac.fade = 0;\n            } else {\n                ac.fade = $bm_div($bm_sub(t, tOut), dOut);\n                if (ac.fade < 0) {\n                    ac.fade = 0;\n                }\n                if (ac.fade > 1) {\n                    ac.fade = 1;\n                }\n                if (eFo) {\n                    ac.fade = eFo(ac.fade);\n                }\n                ac.fade = $bm_sub(1, ac.fade);\n            }\n        }\n        ac.intensity = 1;\n        ac.en = true;\n        ac.t = $bm_sub(t, tIn);\n    }\n    function upACoFx(prC) {\n        ac.fade = 1;\n        ac.intensity = 1;\n        ac.en = true;\n        ac.t = $bm_sub(t, bL.inPoint);\n    }\n    var ac = {};\n    ac.en = false;\n    var v = thisProperty.value;\n    var t = time;\n    var acAccA = 0;\n    ac.en = false;\n    if (tTrI !== null && t < tTrI) {\n        upACo(bL.inPoint, $bm_sub(tTrI, bL.inPoint), bL.outPoint, 0);\n        ac.fade = $bm_sub(1, ac.fade);\n    }\n    acPD('AC IN [WPQ] Controls');\n    if (ac.en) {\n        acValAdd($bm_mul(acAngleValP('AC IN [WPQ] Controls', 'Angle', 100), easeInCubic(ac.fade)));\n    }\n    v = thisProperty.value;\n    v = $bm_sum(v, acAccA);\n    return v;\n}\n$bm_rt = result;"
        },
        "p": {
          "a": 0,
          "k": [585.52, 967.861, 0],
          "ix": 2,
          "l": 2,
          "x": "var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var tTrI = null;\n    var tTrO = null;\n    if (bL.marker?.numKeys > 0) {\n        var acmp = 'zzzzzzzzzzzzzzz_AC';\n        for (var i = 1; i <= bL.marker?.numKeys; i++) {\n            var m = bL.marker?.key(i);\n            var p = m.parameters;\n            if (p.hasOwnProperty(acmp + 'MarkerEnabled') && p.hasOwnProperty(acmp + 'MarkerType') && p.hasOwnProperty(acmp + 'MarkerAppPresetType')) {\n                if (p[acmp + 'MarkerEnabled'] != '1') {\n                    continue;\n                }\n                switch (p[acmp + 'MarkerAppPresetType']) {\n                case '1': {\n                        tTrI = m.time;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    ;\n    function acPD(fxN) {\n        try {\n            if (bL.effect(fxN).active === false) {\n                ac.en = false;\n            }\n        } catch (e) {\n        }\n    }\n    function acPointValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acValAdd(val) {\n        acAccA = $bm_sum(acAccA, val);\n    }\n    function easeInCubic(t) {\n        return $bm_mul($bm_mul(t, t), t);\n    }\n    function upACo(tIn, dIn, tOut, dOut, eFi, eFo) {\n        if (dIn < 0) {\n            dIn = 0;\n        }\n        if (dOut < 0) {\n            dOut = 0;\n        }\n        ac.fade = 1;\n        if (t < tOut) {\n            if (t < $bm_sum(tIn, dIn)) {\n                if (dIn == 0) {\n                    ac.fade = 0;\n                } else {\n                    ac.fade = $bm_div($bm_sub(t, tIn), dIn);\n                    if (ac.fade < 0) {\n                        ac.fade = 0;\n                    }\n                    if (ac.fade > 1) {\n                        ac.fade = 1;\n                    }\n                    if (eFi) {\n                        ac.fade = eFi(ac.fade);\n                    }\n                }\n            }\n        } else {\n            if (dOut == 0) {\n                ac.fade = 0;\n            } else {\n                ac.fade = $bm_div($bm_sub(t, tOut), dOut);\n                if (ac.fade < 0) {\n                    ac.fade = 0;\n                }\n                if (ac.fade > 1) {\n                    ac.fade = 1;\n                }\n                if (eFo) {\n                    ac.fade = eFo(ac.fade);\n                }\n                ac.fade = $bm_sub(1, ac.fade);\n            }\n        }\n        ac.intensity = 1;\n        ac.en = true;\n        ac.t = $bm_sub(t, tIn);\n    }\n    function upACoFx(prC) {\n        ac.fade = 1;\n        ac.intensity = 1;\n        ac.en = true;\n        ac.t = $bm_sub(t, bL.inPoint);\n    }\n    var ac = {};\n    ac.en = false;\n    var v = thisProperty.value;\n    var t = time;\n    var acAccA = 0;\n    ac.en = false;\n    if (tTrI !== null && t < tTrI) {\n        upACo(bL.inPoint, $bm_sub(tTrI, bL.inPoint), bL.outPoint, 0);\n        ac.fade = $bm_sub(1, ac.fade);\n    }\n    acPD('AC IN [WPQ] Controls');\n    if (ac.en) {\n        acValAdd($bm_mul(acPointValP('AC IN [WPQ] Controls', 'Position', [\n            0,\n            1500\n        ]), easeInCubic(ac.fade)));\n    }\n    v = thisProperty.value;\n    v = $bm_sum(v, acAccA);\n    return v;\n}\n$bm_rt = result;"
        },
        "a": { "a": 0, "k": [0, 0, 0], "ix": 1, "l": 2 },
        "s": { "a": 0, "k": [137, 137, 100], "ix": 6, "l": 2 }
      },
      "ao": 0,
      "ef": [
        {
          "ty": 5,
          "nm": "AC IN [WPQ] Controls",
          "np": 4,
          "mn": "Pseudo/MHAC PrCtrl WPQ 4",
          "ix": 1,
          "en": 1,
          "ef": [
            {
              "ty": 3,
              "nm": "Position",
              "mn": "Pseudo/MHAC PrCtrl WPQ 4-0001",
              "ix": 1,
              "v": { "a": 0, "k": [0, 1747], "ix": 1 }
            },
            {
              "ty": 0,
              "nm": "Angle",
              "mn": "Pseudo/MHAC PrCtrl WPQ 4-0002",
              "ix": 2,
              "v": { "a": 0, "k": 100, "ix": 2 }
            }
          ]
        },
        {
          "ty": 5,
          "nm": "AC FX [EKL] Controls",
          "np": 8,
          "mn": "Pseudo/MHAC PrCtrl EKL 4",
          "ix": 2,
          "en": 1,
          "ef": [
            {
              "ty": 0,
              "nm": "Intensity",
              "mn": "Pseudo/MHAC PrCtrl EKL 4-0001",
              "ix": 1,
              "v": { "a": 0, "k": 100, "ix": 1 }
            },
            {
              "ty": 3,
              "nm": "Position",
              "mn": "Pseudo/MHAC PrCtrl EKL 4-0002",
              "ix": 2,
              "v": { "a": 0, "k": [4, 10], "ix": 2 }
            },
            {
              "ty": 0,
              "nm": "Angle",
              "mn": "Pseudo/MHAC PrCtrl EKL 4-0003",
              "ix": 3,
              "v": { "a": 0, "k": 4, "ix": 3 }
            },
            {
              "ty": 0,
              "nm": "Wiggles/Second",
              "mn": "Pseudo/MHAC PrCtrl EKL 4-0004",
              "ix": 4,
              "v": { "a": 0, "k": 1, "ix": 4 }
            },
            {
              "ty": 0,
              "nm": "Correlation",
              "mn": "Pseudo/MHAC PrCtrl EKL 4-0005",
              "ix": 5,
              "v": { "a": 0, "k": 0, "ix": 5 }
            },
            {
              "ty": 0,
              "nm": "Random Seed",
              "mn": "Pseudo/MHAC PrCtrl EKL 4-0006",
              "ix": 6,
              "v": { "a": 0, "k": 0, "ix": 6 }
            }
          ]
        },
        {
          "ty": 25,
          "nm": "Drop Shadow",
          "np": 8,
          "mn": "ADBE Drop Shadow",
          "ix": 3,
          "en": 1,
          "ef": [
            {
              "ty": 2,
              "nm": "Shadow Color",
              "mn": "ADBE Drop Shadow-0001",
              "ix": 1,
              "v": { "a": 0, "k": [0, 0, 0, 1], "ix": 1 }
            },
            {
              "ty": 0,
              "nm": "Opacity",
              "mn": "ADBE Drop Shadow-0002",
              "ix": 2,
              "v": { "a": 0, "k": 216.75, "ix": 2 }
            },
            {
              "ty": 0,
              "nm": "Direction",
              "mn": "ADBE Drop Shadow-0003",
              "ix": 3,
              "v": { "a": 0, "k": 141, "ix": 3 }
            },
            {
              "ty": 0,
              "nm": "Distance",
              "mn": "ADBE Drop Shadow-0004",
              "ix": 4,
              "v": { "a": 0, "k": 12, "ix": 4 }
            },
            {
              "ty": 0,
              "nm": "Softness",
              "mn": "ADBE Drop Shadow-0005",
              "ix": 5,
              "v": { "a": 0, "k": 0, "ix": 5 }
            },
            {
              "ty": 7,
              "nm": "Shadow Only",
              "mn": "ADBE Drop Shadow-0006",
              "ix": 6,
              "v": { "a": 0, "k": 0, "ix": 6 }
            }
          ]
        }
      ],
      "t": {
        "d": {
          "k": [
            {
              "s": {
                "s": 170,
                "f": "GillSans-Bold",
                "t": "MATCH",
                "ca": 0,
                "j": 2,
                "tr": -46,
                "lh": 65,
                "ls": 0,
                "fc": [0.341, 0.655, 0.451]
              },
              "t": 0
            }
          ]
        },
        "p": {},
        "m": {
          "g": 1,
          "a": {
            "a": 0,
            "k": [0, 0],
            "ix": 2,
            "x": "var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    var tTrI = null;\n    var tTrO = null;\n    if (bL.marker?.numKeys > 0) {\n        var acmp = 'zzzzzzzzzzzzzzz_AC';\n        for (var i = 1; i <= bL.marker?.numKeys; i++) {\n            var m = bL.marker?.key(i);\n            var p = m.parameters;\n            if (p.hasOwnProperty(acmp + 'MarkerEnabled') && p.hasOwnProperty(acmp + 'MarkerType') && p.hasOwnProperty(acmp + 'MarkerAppPresetType')) {\n                if (p[acmp + 'MarkerEnabled'] != '1') {\n                    continue;\n                }\n                switch (p[acmp + 'MarkerAppPresetType']) {\n                case '1': {\n                        tTrI = m.time;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    ;\n    function acSliderValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acValAvg(val) {\n        acAccAvgC = $bm_sum(acAccAvgC, 1);\n        if (acAccAvgW === null) {\n            acAccAvg = $bm_sum(acAccAvg, val);\n        } else {\n            acAccAvg = $bm_sum(acAccAvg, $bm_mul(val, acAccAvgW));\n            acAccAvgWC++;\n        }\n    }\n    function upACo(tIn, dIn, tOut, dOut, eFi, eFo) {\n        if (dIn < 0) {\n            dIn = 0;\n        }\n        if (dOut < 0) {\n            dOut = 0;\n        }\n        ac.fade = 1;\n        if (t < tOut) {\n            if (t < $bm_sum(tIn, dIn)) {\n                if (dIn == 0) {\n                    ac.fade = 0;\n                } else {\n                    ac.fade = $bm_div($bm_sub(t, tIn), dIn);\n                    if (ac.fade < 0) {\n                        ac.fade = 0;\n                    }\n                    if (ac.fade > 1) {\n                        ac.fade = 1;\n                    }\n                    if (eFi) {\n                        ac.fade = eFi(ac.fade);\n                    }\n                }\n            }\n        } else {\n            if (dOut == 0) {\n                ac.fade = 0;\n            } else {\n                ac.fade = $bm_div($bm_sub(t, tOut), dOut);\n                if (ac.fade < 0) {\n                    ac.fade = 0;\n                }\n                if (ac.fade > 1) {\n                    ac.fade = 1;\n                }\n                if (eFo) {\n                    ac.fade = eFo(ac.fade);\n                }\n                ac.fade = $bm_sub(1, ac.fade);\n            }\n        }\n        ac.intensity = 1;\n        ac.en = true;\n        ac.t = $bm_sub(t, tIn);\n    }\n    function upACoFx(prC) {\n        ac.fade = 1;\n        ac.intensity = 1;\n        ac.en = true;\n        ac.t = $bm_sub(t, bL.inPoint);\n    }\n    var ac = {};\n    ac.en = false;\n    var v = thisProperty.value;\n    var t = time;\n    var acAccAvg = 0;\n    var acAccAvgC = 0;\n    var acAccAvgW = null;\n    var acAccAvgWC = 0;\n    acAccAvgW = null;\n    upACoFx('EKL#3#1');\n    if (ac.en) {\n        ac.intensity = $bm_div(acSliderValP('AC FX [EKL] Controls', 'Intensity', 100), 100);\n    }\n    if (ac.en) {\n        acValAvg([\n            0,\n            -50\n        ]);\n    }\n    v = thisProperty.value;\n    if (acAccAvgWC > 1) {\n        acAccAvgC--;\n    }\n    if (acAccAvgC > 0) {\n        v = $bm_sum(v, $bm_div(acAccAvg, acAccAvgC));\n    }\n    return v;\n}\n$bm_rt = result;"
          }
        },
        "a": [
          {
            "nm": "AC FX [EKL] Animator 2",
            "s": {
              "t": 0,
              "xe": { "k": 0 },
              "ne": { "k": 0 },
              "a": { "k": 100 },
              "b": 1,
              "sh": 0,
              "s": { "k": 0 },
              "e": { "k": 100 },
              "o": { "k": 0 }
            },
            "a": {
              "p": {
                "a": 0,
                "k": [0, 0, 0],
                "ix": 2,
                "x": "var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    ;\n    function acPointValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acSliderValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acValAdd(val) {\n        acAccA = $bm_sum(acAccA, val);\n    }\n    function upACoFx(prC) {\n        ac.fade = 1;\n        ac.intensity = 1;\n        ac.en = true;\n        ac.t = $bm_sub(t, bL.inPoint);\n    }\n    var ac = {};\n    ac.en = false;\n    var v = thisProperty.value;\n    var t = time;\n    var acAccA = 0;\n    upACoFx('EKL#3#1');\n    if (ac.en) {\n        ac.intensity = $bm_div(acSliderValP('AC FX [EKL] Controls', 'Intensity', 100), 100);\n    }\n    if (ac.en) {\n        acValAdd($bm_mul($bm_mul(acPointValP('AC FX [EKL] Controls', 'Position', [\n            10,\n            10\n        ]), ac.fade), ac.intensity));\n    }\n    v = thisProperty.value;\n    v = $bm_sum(v, acAccA);\n    return v;\n}\n$bm_rt = result;"
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 8,
                "x": "var $bm_rt;\nvar result;\nresult = getAnimationComposerPresetValue();\nfunction getAnimationComposerPresetValue() {\n    var bL = thisLayer;\n    ;\n    function acAngleValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acSliderValP(fxN, stN, dV) {\n        try {\n            return bL.effect(fxN)(stN);\n        } catch (e) {\n            return dV;\n        }\n    }\n    function acValAdd(val) {\n        acAccA = $bm_sum(acAccA, val);\n    }\n    function upACoFx(prC) {\n        ac.fade = 1;\n        ac.intensity = 1;\n        ac.en = true;\n        ac.t = $bm_sub(t, bL.inPoint);\n    }\n    var ac = {};\n    ac.en = false;\n    var v = thisProperty.value;\n    var t = time;\n    var acAccA = 0;\n    upACoFx('EKL#3#1');\n    if (ac.en) {\n        ac.intensity = $bm_div(acSliderValP('AC FX [EKL] Controls', 'Intensity', 100), 100);\n    }\n    if (ac.en) {\n        acValAdd($bm_mul($bm_mul(acAngleValP('AC FX [EKL] Controls', 'Angle', 10), ac.fade), ac.intensity));\n    }\n    v = thisProperty.value;\n    v = $bm_sum(v, acAccA);\n    return v;\n}\n$bm_rt = result;"
              }
            }
          }
        ]
      },
      "ip": 3,
      "op": 659,
      "st": 3,
      "ct": 1,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 2,
      "ty": 0,
      "nm": "MATCH_CoreAnimation",
      "refId": "comp_0",
      "sr": 1,
      "ks": {
        "o": { "a": 0, "k": 100, "ix": 11 },
        "r": { "a": 0, "k": 0, "ix": 10 },
        "p": { "a": 0, "k": [585, 1266, 0], "ix": 2, "l": 2 },
        "a": { "a": 0, "k": [585, 1266, 0], "ix": 1, "l": 2 },
        "s": { "a": 0, "k": [100, 100, 100], "ix": 6, "l": 2 }
      },
      "ao": 0,
      "ef": [
        {
          "ty": 25,
          "nm": "Drop Shadow",
          "np": 8,
          "mn": "ADBE Drop Shadow",
          "ix": 1,
          "en": 1,
          "ef": [
            {
              "ty": 2,
              "nm": "Shadow Color",
              "mn": "ADBE Drop Shadow-0001",
              "ix": 1,
              "v": { "a": 0, "k": [0, 0, 0, 1], "ix": 1 }
            },
            {
              "ty": 0,
              "nm": "Opacity",
              "mn": "ADBE Drop Shadow-0002",
              "ix": 2,
              "v": { "a": 0, "k": 153, "ix": 2 }
            },
            {
              "ty": 0,
              "nm": "Direction",
              "mn": "ADBE Drop Shadow-0003",
              "ix": 3,
              "v": { "a": 0, "k": 141, "ix": 3 }
            },
            {
              "ty": 0,
              "nm": "Distance",
              "mn": "ADBE Drop Shadow-0004",
              "ix": 4,
              "v": { "a": 0, "k": 21, "ix": 4 }
            },
            {
              "ty": 0,
              "nm": "Softness",
              "mn": "ADBE Drop Shadow-0005",
              "ix": 5,
              "v": { "a": 0, "k": 78, "ix": 5 }
            },
            {
              "ty": 7,
              "nm": "Shadow Only",
              "mn": "ADBE Drop Shadow-0006",
              "ix": 6,
              "v": { "a": 0, "k": 0, "ix": 6 }
            }
          ]
        }
      ],
      "w": 1170,
      "h": 2532,
      "ip": 0,
      "op": 656,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 3,
      "ty": 1,
      "nm": "BG 2",
      "sr": 1,
      "ks": {
        "o": {
          "a": 1,
          "k": [
            { "i": { "x": [0.4], "y": [1] }, "o": { "x": [0.6], "y": [0] }, "t": 0, "s": [0] },
            { "t": 34, "s": [85] }
          ],
          "ix": 11
        },
        "r": { "a": 0, "k": 0, "ix": 10 },
        "p": { "a": 0, "k": [585, 1266, 0], "ix": 2, "l": 2 },
        "a": { "a": 0, "k": [585, 1266, 0], "ix": 1, "l": 2 },
        "s": { "a": 0, "k": [100, 100, 100], "ix": 6, "l": 2 }
      },
      "ao": 0,
      "sw": 1170,
      "sh": 2532,
      "sc": "#000000",
      "ip": 0,
      "op": 656,
      "st": 0,
      "bm": 0
    }
  ],
  "markers": [],
  "props": {},
  "chars": [
    {
      "ch": "M",
      "size": 170,
      "style": "Bold",
      "w": 95.8,
      "data": {
        "shapes": [
          {
            "ty": "gr",
            "it": [
              {
                "ind": 0,
                "ty": "sh",
                "ix": 1,
                "ks": {
                  "a": 0,
                  "k": {
                    "i": [
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0]
                    ],
                    "o": [
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0]
                    ],
                    "v": [
                      [87.207, -67.676],
                      [68.701, -67.676],
                      [47.803, -42.285],
                      [27.002, -67.676],
                      [8.496, -67.676],
                      [8.496, 0],
                      [28.32, 0],
                      [28.32, -39.209],
                      [46.777, -16.504],
                      [48.389, -16.504],
                      [66.797, -39.209],
                      [66.797, 0],
                      [87.207, 0]
                    ],
                    "c": true
                  },
                  "ix": 2
                },
                "nm": "M",
                "mn": "ADBE Vector Shape - Group",
                "hd": false
              }
            ],
            "nm": "M",
            "np": 3,
            "cix": 2,
            "bm": 0,
            "ix": 1,
            "mn": "ADBE Vector Group",
            "hd": false
          }
        ]
      },
      "fFamily": "Gill Sans"
    },
    {
      "ch": "A",
      "size": 170,
      "style": "Bold",
      "w": 83.3,
      "data": {
        "shapes": [
          {
            "ty": "gr",
            "it": [
              {
                "ind": 0,
                "ty": "sh",
                "ix": 1,
                "ks": {
                  "a": 0,
                  "k": {
                    "i": [
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0]
                    ],
                    "o": [
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0]
                    ],
                    "v": [
                      [52.979, -67.676],
                      [30.42, -67.676],
                      [0.488, 0],
                      [21.387, 0],
                      [27.002, -13.721],
                      [56.396, -13.721],
                      [61.914, 0],
                      [82.812, 0]
                    ],
                    "c": true
                  },
                  "ix": 2
                },
                "nm": "A",
                "mn": "ADBE Vector Shape - Group",
                "hd": false
              },
              {
                "ind": 1,
                "ty": "sh",
                "ix": 2,
                "ks": {
                  "a": 0,
                  "k": {
                    "i": [
                      [0, 0],
                      [0, 0],
                      [0, 0]
                    ],
                    "o": [
                      [0, 0],
                      [0, 0],
                      [0, 0]
                    ],
                    "v": [
                      [31.787, -25.488],
                      [41.797, -50.195],
                      [51.709, -25.488]
                    ],
                    "c": true
                  },
                  "ix": 2
                },
                "nm": "A",
                "mn": "ADBE Vector Shape - Group",
                "hd": false
              }
            ],
            "nm": "A",
            "np": 5,
            "cix": 2,
            "bm": 0,
            "ix": 1,
            "mn": "ADBE Vector Group",
            "hd": false
          }
        ]
      },
      "fFamily": "Gill Sans"
    },
    {
      "ch": "T",
      "size": 170,
      "style": "Bold",
      "w": 75.39,
      "data": {
        "shapes": [
          {
            "ty": "gr",
            "it": [
              {
                "ind": 0,
                "ty": "sh",
                "ix": 1,
                "ks": {
                  "a": 0,
                  "k": {
                    "i": [
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0]
                    ],
                    "o": [
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0]
                    ],
                    "v": [
                      [73.389, -67.676],
                      [3.418, -67.676],
                      [3.418, -51.221],
                      [28.223, -51.221],
                      [28.223, 0],
                      [48.584, 0],
                      [48.584, -51.221],
                      [73.389, -51.221]
                    ],
                    "c": true
                  },
                  "ix": 2
                },
                "nm": "T",
                "mn": "ADBE Vector Shape - Group",
                "hd": false
              }
            ],
            "nm": "T",
            "np": 3,
            "cix": 2,
            "bm": 0,
            "ix": 1,
            "mn": "ADBE Vector Group",
            "hd": false
          }
        ]
      },
      "fFamily": "Gill Sans"
    },
    {
      "ch": "C",
      "size": 170,
      "style": "Bold",
      "w": 72.9,
      "data": {
        "shapes": [
          {
            "ty": "gr",
            "it": [
              {
                "ind": 0,
                "ty": "sh",
                "ix": 1,
                "ks": {
                  "a": 0,
                  "k": {
                    "i": [
                      [0, 0],
                      [2.002, -0.977],
                      [2.93, -0.797],
                      [3.288, 0],
                      [3.239, 1.677],
                      [1.823, 2.849],
                      [0, 3.418],
                      [-2.084, 2.898],
                      [-3.418, 1.562],
                      [-3.939, 0],
                      [-3.271, -1.383],
                      [-3.353, -2.083],
                      [0, 0],
                      [7.682, 0],
                      [4.639, -1.383],
                      [3.629, -2.897],
                      [2.018, -4.378],
                      [0, -5.827],
                      [-1.709, -4.248],
                      [-3.435, -3.174],
                      [-4.671, -1.627],
                      [-5.892, 0],
                      [-2.979, 0.374],
                      [-2.93, 0.879],
                      [-2.8, 1.465]
                    ],
                    "o": [
                      [-2.116, 1.335],
                      [-2.002, 0.977],
                      [-2.93, 0.798],
                      [-4.07, 0],
                      [-3.239, -1.676],
                      [-1.823, -2.848],
                      [0, -3.873],
                      [2.083, -2.897],
                      [3.418, -1.562],
                      [4.427, 0],
                      [3.271, 1.384],
                      [0, 0],
                      [-9.734, -3.418],
                      [-5.144, 0],
                      [-4.639, 1.384],
                      [-3.63, 2.898],
                      [-2.019, 4.379],
                      [0, 5.078],
                      [1.709, 4.248],
                      [3.434, 3.174],
                      [4.671, 1.627],
                      [3.19, 0],
                      [2.979, -0.374],
                      [2.93, -0.879],
                      [0, 0]
                    ],
                    "v": [
                      [69.092, -22.217],
                      [62.915, -18.75],
                      [55.518, -16.089],
                      [46.191, -14.893],
                      [35.229, -17.407],
                      [27.637, -24.194],
                      [24.902, -33.594],
                      [28.027, -43.75],
                      [36.279, -50.439],
                      [47.314, -52.783],
                      [58.862, -50.708],
                      [68.799, -45.508],
                      [68.799, -63.477],
                      [42.676, -68.604],
                      [28.003, -66.528],
                      [15.601, -60.107],
                      [7.129, -49.194],
                      [4.102, -33.887],
                      [6.665, -19.897],
                      [14.38, -8.765],
                      [26.538, -1.562],
                      [42.383, 0.879],
                      [51.636, 0.317],
                      [60.498, -1.562],
                      [69.092, -5.078]
                    ],
                    "c": true
                  },
                  "ix": 2
                },
                "nm": "C",
                "mn": "ADBE Vector Shape - Group",
                "hd": false
              }
            ],
            "nm": "C",
            "np": 3,
            "cix": 2,
            "bm": 0,
            "ix": 1,
            "mn": "ADBE Vector Group",
            "hd": false
          }
        ]
      },
      "fFamily": "Gill Sans"
    },
    {
      "ch": "H",
      "size": 170,
      "style": "Bold",
      "w": 88.48,
      "data": {
        "shapes": [
          {
            "ty": "gr",
            "it": [
              {
                "ind": 0,
                "ty": "sh",
                "ix": 1,
                "ks": {
                  "a": 0,
                  "k": {
                    "i": [
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0]
                    ],
                    "o": [
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0],
                      [0, 0]
                    ],
                    "v": [
                      [79.98, -67.676],
                      [59.619, -67.676],
                      [59.619, -42.822],
                      [28.906, -42.822],
                      [28.906, -67.676],
                      [8.496, -67.676],
                      [8.496, 0],
                      [28.906, 0],
                      [28.906, -26.416],
                      [59.619, -26.416],
                      [59.619, 0],
                      [79.98, 0]
                    ],
                    "c": true
                  },
                  "ix": 2
                },
                "nm": "H",
                "mn": "ADBE Vector Shape - Group",
                "hd": false
              }
            ],
            "nm": "H",
            "np": 3,
            "cix": 2,
            "bm": 0,
            "ix": 1,
            "mn": "ADBE Vector Group",
            "hd": false
          }
        ]
      },
      "fFamily": "Gill Sans"
    }
  ]
}
